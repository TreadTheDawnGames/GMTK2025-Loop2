[gd_scene load_steps=20 format=3 uid="uid://14epulnfjodl"]

[ext_resource type="Script" uid="uid://bdfhql41tte7y" path="res://Scripts/HomePlanet.gd" id="1_homeplanet"]
[ext_resource type="Texture2D" uid="uid://nkane6t2xqfq" path="res://Assets/kenney_space-shooter-extension/AAA-ChosenKenneySpace/FullStation.png" id="2_yx0ix"]
[ext_resource type="Texture2D" uid="uid://cd3nqdixd30my" path="res://Assets/kenney_space-shooter-extension/AAA-ChosenKenneySpace/FullStation_normal.png" id="3_7i0kr"]
[ext_resource type="Texture2D" uid="uid://bvuwwkt6a5ibd" path="res://Assets/kenney_space-shooter-extension/AAA-ChosenKenneySpace/FullStation_specular.png" id="4_67m2w"]
[ext_resource type="Texture2D" uid="uid://cttrn2nakn67e" path="res://Assets/Circle.png" id="5_bpuqj"]
[ext_resource type="Script" uid="uid://cqvosktsb48d3" path="res://Scripts/tools/planet_atmo.gd" id="6_xlxvy"]

[sub_resource type="CanvasTexture" id="CanvasTexture_vtlm0"]
diffuse_texture = ExtResource("2_yx0ix")
normal_texture = ExtResource("3_7i0kr")
specular_texture = ExtResource("4_67m2w")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_base_collider"]
size = Vector2(516, 157)

[sub_resource type="CircleShape2D" id="CircleShape2D_vtlm0"]
radius = 165.194

[sub_resource type="RectangleShape2D" id="RectangleShape2D_cxprx"]
size = Vector2(516, 83)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_bpuqj"]
size = Vector2(133, 448)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_xlxvy"]
size = Vector2(8, 60)

[sub_resource type="CircleShape2D" id="CircleShape2D_gravity"]
radius = 2000.0

[sub_resource type="Shader" id="Shader_rh52w"]
code = "//CC0 https://godotshaders.com/shader/radial-smooth-radial-gradient/
shader_type canvas_item;
render_mode blend_add; //Comment this if you want another render mode.
uniform vec2 center = vec2(0.5);
uniform float size: hint_range(0.0,5.0) = 1.0; //change size to well, change the size of your gradient
uniform vec2 squishness = vec2(1.0); // how squashed your gradient is

//choose colors in the inspector
uniform vec4 color1 : source_color;
uniform vec4 color2 : source_color;
uniform vec4 color3 : source_color;
uniform vec4 color4 : source_color;
uniform vec4 color5 : source_color;
uniform vec4 color6 : source_color;

//choose how far the colors are from each other in the inspector
uniform float step1 : hint_range(0.0,1.0) = 0.159;
uniform float step2 : hint_range(0.0,1.0) = 0.182;
uniform float step3 : hint_range(0.0,1.0) = 0.233;
uniform float step4 : hint_range(0.0,1.0) = 0.264;
uniform float step5 : hint_range(0.0,1.0) = 0.265;
uniform float step6 : hint_range(0.0,1.0) = 0.266;

void fragment() {

	float dist = distance(center*squishness,UV*squishness);
	vec4 color = mix(color1, color2, smoothstep((step1 )*size, step2*size, dist));
	color = mix(color, color3, smoothstep(step2*size, step3*size, dist));
	color = mix(color, color4, smoothstep(step3*size, step4*size, dist));
	color = mix(color, color5, smoothstep(step4*size, step5*size, dist));
	color = mix(color, color6, smoothstep(step5*size, step6*size, dist));
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_dgjnp"]
shader = SubResource("Shader_rh52w")
shader_parameter/center = Vector2(0.5, 0.5)
shader_parameter/size = 1.0
shader_parameter/squishness = Vector2(1, 1)
shader_parameter/color1 = Color(1, 1, 1, 0)
shader_parameter/color2 = Color(0, 0, 0, 1)
shader_parameter/color3 = Color(1, 1, 1, 0.0313726)
shader_parameter/color4 = Color(0, 0, 0, 1)
shader_parameter/color5 = Color(1, 1, 1, 0.243137)
shader_parameter/color6 = Color(0, 0, 0, 1)
shader_parameter/step1 = 0.159
shader_parameter/step2 = 0.182
shader_parameter/step3 = 0.233
shader_parameter/step4 = 0.264
shader_parameter/step5 = 0.265
shader_parameter/step6 = 0.266

[sub_resource type="Shader" id="Shader_m5833"]
code = "//CC0 https://godotshaders.com/shader/radial-smooth-radial-gradient/
shader_type canvas_item;
render_mode blend_add; //Comment this if you want another render mode.
uniform vec2 center = vec2(0.5);
uniform float size: hint_range(0.0,5.0) = 1.0; //change size to well, change the size of your gradient
uniform vec2 squishness = vec2(1.0); // how squashed your gradient is

//choose colors in the inspector
uniform vec4 color1 : source_color;
uniform vec4 color2 : source_color;
uniform vec4 color3 : source_color;
uniform vec4 color4 : source_color;
uniform vec4 color5 : source_color;
uniform vec4 color6 : source_color;

//choose how far the colors are from each other in the inspector
uniform float step1 : hint_range(0.0,1.0) = 0.159;
uniform float step2 : hint_range(0.0,1.0) = 0.182;
uniform float step3 : hint_range(0.0,1.0) = 0.233;
uniform float step4 : hint_range(0.0,1.0) = 0.264;
uniform float step5 : hint_range(0.0,1.0) = 0.265;
uniform float step6 : hint_range(0.0,1.0) = 0.266;

void fragment() {
	
	float dist = distance(center*squishness,UV*squishness);
	vec4 color = mix(color1, color2, smoothstep((step1 )*size, step2*size, dist));
	color = mix(color, color3, smoothstep(step2*size, step3*size, dist));
	color = mix(color, color4, smoothstep(step3*size, step4*size, dist));
	color = mix(color, color5, smoothstep(step4*size, step5*size, dist));
	color = mix(color, color6, smoothstep(step5*size, step6*size, dist));
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_yx0ix"]
shader = SubResource("Shader_m5833")
shader_parameter/center = Vector2(0.5, 0.5)
shader_parameter/size = 1.0
shader_parameter/squishness = Vector2(1, 1)
shader_parameter/color1 = Color(0, 1, 0, 0)
shader_parameter/color2 = Color(0, 0, 0, 1)
shader_parameter/color3 = Color(0, 1, 0, 0.0313726)
shader_parameter/color4 = Color(0, 0, 0, 1)
shader_parameter/color5 = Color(1, 1, 1, 0.243137)
shader_parameter/color6 = Color(0, 0, 0, 1)
shader_parameter/step1 = 0.159
shader_parameter/step2 = 0.182
shader_parameter/step3 = 0.233
shader_parameter/step4 = 0.264
shader_parameter/step5 = 0.265
shader_parameter/step6 = 0.266

[sub_resource type="RectangleShape2D" id="RectangleShape2D_shop_area"]
size = Vector2(550, 1075)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_vtlm0"]
size = Vector2(550, 1075)

[node name="HomePlanet" type="Area2D"]
script = ExtResource("1_homeplanet")
gravity_strength = 200.0
has_points = false
can_have_collectable = false
can_have_satellites = false

[node name="Sprite" type="Sprite2D" parent="."]
scale = Vector2(3, 3)
texture = SubResource("CanvasTexture_vtlm0")

[node name="AnimatableBody2D" type="AnimatableBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="AnimatableBody2D"]
position = Vector2(-1, -178.5)
shape = SubResource("RectangleShape2D_base_collider")

[node name="CollisionShape2D2" type="CollisionShape2D" parent="AnimatableBody2D"]
position = Vector2(0, -358)
shape = SubResource("CircleShape2D_vtlm0")

[node name="CollisionShape2D3" type="CollisionShape2D" parent="AnimatableBody2D"]
position = Vector2(0, 229.5)
shape = SubResource("RectangleShape2D_cxprx")

[node name="CollisionShape2D4" type="CollisionShape2D" parent="AnimatableBody2D"]
position = Vector2(0.5, 123)
shape = SubResource("RectangleShape2D_bpuqj")

[node name="CollisionShape2D5" type="CollisionShape2D" parent="AnimatableBody2D"]
position = Vector2(0, 427)
scale = Vector2(3, 3)
shape = SubResource("RectangleShape2D_xlxvy")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_gravity")

[node name="Sprite2D" type="Sprite2D" parent="CollisionShape2D"]
material = SubResource("ShaderMaterial_dgjnp")
scale = Vector2(5.38574, 5.38574)
texture = ExtResource("5_bpuqj")
script = ExtResource("6_xlxvy")

[node name="Sprite2D2" type="Sprite2D" parent="CollisionShape2D/Sprite2D"]
visible = false
material = SubResource("ShaderMaterial_yx0ix")
texture = ExtResource("5_bpuqj")

[node name="ShopArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ShopArea"]
shape = SubResource("RectangleShape2D_shop_area")

[node name="TouchScreenButton" type="TouchScreenButton" parent="."]
shape = SubResource("RectangleShape2D_vtlm0")

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_body_exited"]
[connection signal="pressed" from="TouchScreenButton" to="." method="open_shop"]
